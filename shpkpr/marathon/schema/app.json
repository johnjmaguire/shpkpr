{
  "$schema": "http://json-schema.org/schema#",
  "additionalProperties": false,
  "definitions": {
    "pathType": {
      "pattern": "^(\\/?((\\.{2})|([a-z0-9][a-z0-9\\-.]*[a-z0-9]+)|([a-z0-9]*))($|\\/))+$",
      "type": "string"
    }
  },
  "properties": {
    "args": {
      "items": {
        "type": ["string", "null"]
      },
      "type": ["array", "null"],
      "description": "An array of strings that represents an alternative mode of specifying the command to run. This was motivated by safe usage of containerizer features like a custom Docker ENTRYPOINT. This args field may be used in place of cmd even when using the default command executor. This change mirrors API and semantics changes in the Mesos CommandInfo protobuf message starting with version `0.20.0`.  Either `cmd` or `args` must be supplied. It is invalid to supply both `cmd` and `args` in the same app."
    },
    "backoffFactor": {
      "minimum": 1.0,
      "type": "number",
      "description": "Configures exponential backoff behavior when launching potentially sick apps. This prevents sandboxes associated with consecutively failing tasks from filling up the hard disk on Mesos slaves. The backoff period is multiplied by the factor for each consecutive failure until it reaches maxLaunchDelaySeconds. This applies also to tasks that are killed due to failing too many health checks."
    },
    "backoffSeconds": {
      "description": "Configures exponential backoff behavior when launching potentially sick apps. This prevents sandboxes associated with consecutively failing tasks from filling up the hard disk on Mesos slaves. The backoff period is multiplied by the factor for each consecutive failure until it reaches maxLaunchDelaySeconds. This applies also to tasks that are killed due to failing too many health checks.",
      "minimum": 0,
      "type": "integer"
    },
    "cmd": {
      "description": "The command that is executed.  This value is wrapped by Mesos via `/bin/sh -c ${app.cmd}`.  Either `cmd` or `args` must be supplied. It is invalid to supply both `cmd` and `args` in the same app.",
      "type": ["string", "null"],
      "minLength": 1
    },
    "constraints": {
      "description": "Valid constraint operators are one of UNIQUE, CLUSTER, GROUP_BY."
    },
    "container": {
      "additionalProperties": false,
      "properties": {
        "docker": {
          "additionalProperties": false,
          "properties": {
            "forcePullImage": {
              "type": "boolean"
            },
            "image": {
              "type": "string",
              "minLength": 1
            },
            "network": {
              "type": "string"
            },
            "parameters": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "key": {
                    "type": "string"
                  },
                  "value": {
                    "type": "string"
                  }
                },
                "required": [
                  "key",
                  "value"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "portMappings": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "containerPort": {
                    "maximum": 65535,
                    "minimum": 0,
                    "type": "integer"
                  },
                  "hostPort": {
                    "maximum": 65535,
                    "minimum": 0,
                    "type": "integer"
                  },
                  "protocol": {
                    "type": "string"
                  },
                  "servicePort": {
                    "maximum": 65535,
                    "minimum": 0,
                    "type": "integer"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "privileged": {
              "type": "boolean"
            }
          },
          "required": [
            "image"
          ],
          "type": "object"
        },
        "type": {
          "type": "string"
        },
        "volumes": {
          "items": {
            "additionalProperties": false,
            "properties": {
              "containerPath": {
                "type": "string"
              },
              "hostPath": {
                "type": "string"
              },
              "mode": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "cpus": {
      "minimum": 0,
      "type": "number"
    },
    "dependencies": {
      "items": {
        "$ref": "#/definitions/pathType"
      },
      "type": "array"
    },
    "deployments": {
      "items": {
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "type": "array"
    },
    "disk": {
      "minimum": 0,
      "type": "number"
    },
    "env": {
      "patternProperties": {
        ".*": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "executor": {
      "pattern": "^(|\\/\\/cmd|\\/?[^\\/]+(\\/[^\\/]+)*)$",
      "type": "string"
    },
    "healthChecks": {
      "items": {
        "additionalProperties": false,
        "properties": {
          "command": {
            "type": "object",
            "items": {
              "additionalProperties": false,
              "properties": {
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "gracePeriodSeconds": {
            "minimum": 0,
            "type": "integer"
          },
          "ignoreHttp1xx": {
            "type": "boolean"
          },
          "intervalSeconds": {
            "minimum": 0,
            "type": "integer"
          },
          "maxConsecutiveFailures": {
            "minimum": 0,
            "type": "integer"
          },
          "path": {
            "type": "string"
          },
          "portIndex": {
            "minimum": 0,
            "type": "integer"
          },
          "protocol": {
            "type": "string"
          },
          "timeoutSeconds": {
            "minimum": 0,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "type": "array"
    },
    "id": {
      "$ref": "#/definitions/pathType",
      "description": "Unique identifier for the app consisting of a series of names separated by slashes. Each name must be at least 1 character and may only contain digits (`0-9`), dashes (`-`), dots (`.`), and lowercase letters (`a-z`). The name may not begin or end with a dash."
    },
    "instances": {
      "minimum": 0,
      "type": "integer"
    },
    "labels": {
      "additionalProperties": {
        "type": "string"
      },
      "type": "object"
    },
    "lastTaskFailure": {
      "additionalProperties": false,
      "properties": {
        "appId": {
          "type": "string"
        },
        "host": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "taskId": {
          "type": "string"
        },
        "timestamp": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      },
      "type": ["object", "null"]
    },
    "maxLaunchDelaySeconds": {
      "minimum": 0,
      "type": "integer"
    },
    "mem": {
      "minimum": 0,
      "type": "number"
    },
    "ports": {
      "items": {
        "maximum": 65535,
        "minimum": 0,
        "type": "integer"
      },
      "type": "array",
      "uniqueItems": true
    },
    "requirePorts": {
      "type": "boolean"
    },
    "storeUrls": {
      "items": {
        "type": "string"
      },
      "type": "array"
    },
    "tasks": {
      "items": {
        "additionalProperties": false,
        "properties": {
          "command": {
            "type": "object",
            "items": {
              "additionalProperties": false,
              "properties": {
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "appId": {
            "type": "string"
          },

          "healthCheckResults": {
            "items": {
              "additionalProperties": false,
              "properties": {
                "alive": {
                  "type": "boolean"
                },
                "consecutiveFailures": {
                  "type": "number"
                },
                "firstSuccess": {
                  "type": ["string", "null"]
                },
                "lastFailure": {
                  "type": ["string", "null"]
                },
                "lastSuccess": {
                  "type": ["string", "null"]
                },
                "taskId": {
                  "type": "string"
                }
              },
              "type": ["object", "null"]
            },
            "type": "array"
          },
          "host": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "ports": {
            "items": {
              "maximum": 65535,
              "minimum": 0,
              "type": "integer"
            },
            "type": "array",
            "uniqueItems": true
          },
          "stagedAt": {
            "type": ["string", "null"]
          },
          "startedAt": {
            "type": ["string", "null"]
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "type": "array"
    },
    "tasksStaged": {
      "minimum": 0,
      "type": "number"
    },
    "tasksRunning": {
      "minimum": 0,
      "type": "number"
    },
    "tasksHealthy": {
      "minimum": 0,
      "type": "number"
    },
    "tasksUnhealthy": {
      "minimum": 0,
      "type": "number"
    },
    "upgradeStrategy": {
      "additionalProperties": false,
      "properties": {
        "maximumOverCapacity": {
          "maximum": 1.0,
          "minimum": 0.0,
          "type": "number"
        },
        "minimumHealthCapacity": {
          "maximum": 1.0,
          "minimum": 0.0,
          "type": "number"
        }
      },
      "type": "object"
    },
    "uris": {
      "items": {
        "type": "string"
      },
      "type": "array"
    },
    "user": {
      "type": ["string", "null"]
    },
    "version": {
      "format": "date-time",
      "type": "string"
    }
  },
  "required": [
    "args",
    "backoffFactor",
    "backoffSeconds",
    "cmd",
    "constraints",
    "container",
    "cpus",
    "dependencies",
    "deployments",
    "disk",
    "env",
    "executor",
    "healthChecks",
    "id",
    "instances",
    "labels",
    "maxLaunchDelaySeconds",
    "mem",
    "ports",
    "requirePorts",
    "storeUrls",
    "tasks",
    "tasksStaged",
    "tasksRunning",
    "tasksHealthy",
    "tasksUnhealthy",
    "upgradeStrategy",
    "uris",
    "user",
    "version"
  ],
  "type": "object"
}
